package org.nandor.spark;

import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;


public class DataGatherer {

	
	boolean utilBool = true;
	boolean iterBool = true;
	boolean timeBool = true;
	Map<String,List<Float>> utility = new HashMap<>();//LinkedList<>();
	Map<String,List<Integer>> iteration = new HashMap<>();
	Map<String,List<Float>> execTime = new HashMap<>();
	//Set Test
	public void setTestType(String type) {
		
		switch (type) {
		case "Perf":
			utilBool = true;
			iterBool = false;
			timeBool = true;
			break;
		
		default:
			break;
		}
	}


	//Add Components
	public void addUtility(float bestUtil) {
		if (utilBool){
			utility.add(bestUtil);
		}	
	}
	public void addIteration(int i) {
		if (iterBool){
			iteration.add(i);
		}
	}
	public void addTime(float f) {
		if (timeBool){
			execTime.add(f);
		}
	}
	
	public void reset() {
		utility = new LinkedList<>();
		iteration = new LinkedList<>();
		execTime = new LinkedList<>();
	}
	//print out Results
	public void getResults() {
		System.out.println(utility);
		System.out.println(iteration);
		System.out.println(execTime);
	}


	public void newDataSet(String string) {
		// TODO Auto-generated method stub
		
	}
}
